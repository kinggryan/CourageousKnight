<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_minotaur</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_monster_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Minotaur Initialization

/*
    Minotaur Behavior : 
        The minotaur moves through 3 modes : 
            - Wander (mode = 0)
            - Charge (mode = 1)
            - Stunned (mode = 2)
        The minotaur begins in mode 0. When the room starts, the minotaur picks a random direction and
        begins walking that way, slowly. It follows the passageways in the same way that the knight does.
        If the minotaur spots the knight in his line of sight, he enters mode 1. When charging, the minotaur
        runs in a straight line towards where the knight was spotted. If he hits the knight, the player loses
        the level. If he runs into a wall first, it puts the minotaur in mode 2, in which it is stunned for a
        few seconds before randomizing it's direction and returning to mode 0.
        
        If the minotaur would walk into the fire pit at the center of the level, it turns around
        If the minotaur is tricked into charging into the fire pit at the center of the level, it is defeated
*/

mode = 0
wander_speed = 1.5
charge_max_speed = 8
charge_acceleration = .5
saw_knight = 0
stun_time = 60 // stun time is 2.5 seconds

direction = choose_random_direction(self.id)
speed = wander_speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop being stunned

self.x = self.x - (self.x%BLOCK_SIZE) + BLOCK_SIZE/2
self.y = self.y - (self.y%BLOCK_SIZE) + BLOCK_SIZE/2

newdir = check_for_knight_in_line_of_sight(self.id)

if(newdir == -1)
{
    mode = 0
    direction = choose_random_direction(self.id)
    speed = wander_speed
}
else
{
        mode = 1 // charge mode
        
        direction  = newdir
        speed = 0
        
        sprite_index = spr_minotaur_mad
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Boss Movement

if(mode == 0)
{
    // handle turns
    with(collision_point(self.x,self.y,obj_passage_parent,true,false))
    {
        if(object_is_ancestor(self.object_index,obj_passage_corner_parent) ||
            object_is_ancestor(self.object_index,obj_rot_passage_corner_parent) ||
            object_is_ancestor(self.object_index,obj_slide_passage_turn))
        {
            if( abs(obj_boss_minotaur.x - self.x) &lt;= obj_boss_minotaur.speed &amp;&amp; abs(obj_boss_minotaur.y - self.y) &lt;= obj_boss_minotaur.speed )
            {
                show_message("turn")
                obj_boss_minotaur.x = self.x
                obj_boss_minotaur.y = self.y

                if obj_boss_minotaur.direction == (self.door_1 + 180) % 360
                    obj_boss_minotaur.direction = self.door_2
                else
                    obj_boss_minotaur.direction = self.door_1
            }
        }
    }
    
    if(abs((self.x%BLOCK_SIZE) - (BLOCK_SIZE/2)) &lt; self.speed &amp;&amp; abs((self.y%BLOCK_SIZE) - (BLOCK_SIZE/2)) &lt; self.speed) // if within one step of center of block
        return_dir = check_for_knight_in_line_of_sight(self.id)
    else
        return_dir = -1
        
    if(return_dir != -1) // if we did see the knight and are centered
    {
        mode = 1 // charge mode
        self.x += -(self.x % BLOCK_SIZE) + 32 // center self
        self.y += -(self.y % BLOCK_SIZE) + 32 // center self
        
        direction  = return_dir
        speed = 0
        
        sprite_index = spr_minotaur_mad
    }
    
    
}
else if (mode == 1)
{
    if(speed &lt; charge_max_speed)
        speed += charge_acceleration
}
// mode = 2 handled in alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_knight">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Knock Out Player

show_message("YOU DAYD")
room_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_passage_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collision with Passageway
if(mode == 0)
{
    hspeed = -hspeed
    vspeed = -vspeed
}
if(mode == 1) // get stunned
{
    mode = 2
    
    speed = 0
    alarm[0] = stun_time
    self.x += -(self.x%BLOCK_SIZE) + BLOCK_SIZE/2
    self.y += -(self.y%BLOCK_SIZE) + BLOCK_SIZE/2
    
    instance_create(x,y,obj_stun_sprite)
    
    sprite_index = spr_minotaur
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
